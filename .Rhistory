PlaylistPrint <- Playlist %>% select(c("track_name", "artist_name"))
library(tidyverse)
library(cluster)
library(factoextra)
library(janitor)
library(mclust)
library(utils)
load("beats.RData")
mus1 <- beats[, c(1,8:19, 23, 27)]
summary(mus1)
nrow(mus1)
mus_uni <- mus1[!duplicated(mus1$track_id),]
nrow(mus1) - nrow(mus_uni)
summary(mus_uni)
mus_uni$danceability <- as.double(as.character(mus_uni$danceability))
mus_uni$energy <- as.double(as.character(mus_uni$energy))
mus_uni$key <- as.double(as.character(mus_uni$key))
mus_uni$loudness <- as.double(as.character(mus_uni$loudness))
mus_uni$mode <- as.double(as.character(mus_uni$mode))
mus_uni$speechiness <- as.double(as.character(mus_uni$speechiness))
mus_uni$acousticness <- as.double(as.character(mus_uni$acousticness))
mus_uni$instrumentalness <- as.double(as.character(mus_uni$instrumentalness))
mus_uni$liveness <- as.double(as.character(mus_uni$liveness))
mus_uni$valence <- as.double(as.character(mus_uni$valence))
mus_uni$tempo <- as.double(as.character(mus_uni$tempo))
mus_uni$duration_ms <- as.double(as.character(mus_uni$duration_ms))
mus_uni$track_id <- as.character(mus_uni$track_id)
mus_uni$track_name <- as.character(mus_uni$track_name)
mus_uni$artist_name <- as.character(mus_uni$artist_name)
summary(mus_uni)
set.seed(1000)
mus_muest <- mus_uni[sample(nrow(mus_uni), 10000),]
summary(mus_muest)
mus_num <- mus_uni %>%
select(c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo"))
"Media Base Original"
apply(mus_num, 2,mean)
"Desviaci칩n Est치ndar Base Original"
apply(mus_num, 2, sd)
mus_num2 <- mus_muest %>%
select(c("danceability", "energy", "key", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo"))
"Media Base Original"
apply(mus_num2, 2,mean)
"Desviaci칩n Est치ndar Base Original"
apply(mus_num2, 2, sd)
songs_char <- mus_muest %>%
select(c("artist_name", "track_id", "track_name"))
songs_num <- mus_muest %>%
select(c("key", "danceability", "energy", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms"))
mus_scale <- data.frame(sapply(songs_num, scale))
summary(mus_scale)
kmeans10 <- kmeans(mus_scale, centers = 10)
mus_scale10 <- mus_scale
mus_scale10$clus <- kmeans10$cluster %>% as.factor()
ggplot(mus_scale10, aes(liveness, energy, color=clus)) +
geom_point(alpha=0.5, show.legend = T) +
theme_bw()
ggplot(mus_scale10, aes(acousticness, speechiness, color=clus)) +
geom_point(alpha=0.5, show.legend = T) +
theme_bw()
ggplot(mus_scale10, aes(loudness, instrumentalness, color=clus)) +
geom_point(alpha=0.5, show.legend = T) +
theme_bw()
coefSil=numeric(30)
for (k in 2:30){
modelo <- kmeans(mus_scale, centers = k)
temp <- silhouette(modelo$cluster,dist(mus_scale))
coefSil[k] <- mean(temp[,3])
}
tempDF=data.frame(CS=coefSil,K=c(1:30))
ggplot(tempDF, aes(x=K, y=CS)) +
geom_line() +
scale_x_continuous(breaks=c(1:30))
kmeans2 = kmeans(mus_scale, centers = 2)
mus_scale2 <- mus_scale
mus_scale2$clus <- kmeans2$cluster %>% as.factor()
ggplot(mus_scale2, aes(liveness, energy, color=clus)) +
geom_point(alpha=0.5, show.legend = T) +
theme_bw()
ggplot(mus_scale2, aes(acousticness, speechiness, color=clus)) +
geom_point(alpha=0.5, show.legend = T) +
theme_bw()
ggplot(mus_scale2, aes(loudness, instrumentalness, color=clus)) +
geom_point(alpha=0.5, show.legend = T) +
theme_bw()
clu1_k2 <- mus_scale2 %>% filter(mus_scale2$clus == 1)
summary(clu1_k2)
kmeansGMM <- Mclust(clu1_k2)
plot(kmeansGMM, what = 'classification')
summary(kmeansGMM)
gmm <- Mclust(mus_scale)
plot(gmm, what = 'classification')
summary(gmm)
mus_muest_clu <- NULL
cl <- gmm$classification
mus_muest_clu <- cbind(mus_muest, cl)
cancion <- mus_muest_clu[123,]
cluster <- mus_muest_clu %>% filter(mus_muest_clu$cl == cancion$cl)
summary(cluster)
clu_num <- cluster %>% select(c("key", "danceability", "energy", "loudness", "mode", "speechiness", "acousticness", "instrumentalness", "liveness", "valence", "tempo", "duration_ms"))
coefSil=numeric(30)
for (k in 2:30){
modelo <- kmeans(clu_num, centers = k)
temp <- silhouette(modelo$cluster,dist(clu_num))
coefSil[k] <- mean(temp[,3])
}
tempDF=data.frame(CS=coefSil,K=c(1:30))
ggplot(tempDF, aes(x=K, y=CS)) +
geom_line() +
scale_x_continuous(breaks=c(1:30))
kmeansSumaCuadradoscluster <- numeric(30)
for(k in 1:30){
modelo <- kmeans(clu_num, centers = k)
kmeansSumaCuadradoscluster[k] <- modelo$tot.withinss
}
plot(kmeansSumaCuadradoscluster)
modeloKmeansCluster <- kmeans(clu_num, centers = 5)
cluster$cl <- NULL
cluster$cl<- modeloKmeansCluster$cluster
cancion2 <- cluster %>% filter(cluster$track_id == cancion$track_id)
k_cluf <- cluster %>% filter(cluster$cl == cancion2$cl)
cancion2 <- cluster %>% filter(cluster$track_id == cancion$track_id)
Playlist <- NULL
c_time <- cancion2$duration_ms
tiempoMax <- 10800000
Playlist <- rbind.data.frame(Playlist, cancion)
while (c_time <= tiempoMax) {
cancionElegida <- k_cluf[sample(nrow(k_cluf), 1),]
if(any(Playlist$track_id == cancionElegida$track_id)){
next
}
Playlist <- rbind.data.frame(Playlist, cancionElegida)
c_time = c_time + as.numeric(cancionElegida$duration_ms)
}
PlaylistPrint <- Playlist %>% select(c("track_name", "artist_name"))
head(as.matrix.data.frame(PlaylistPrint), nrow(PlaylistPrint))
print(c_time)
